// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eInvoice.Models.Models;

namespace eInvoice.Models.Migrations
{
    [DbContext(typeof(eInvoiceContext))]
    [Migration("20211020224532_Add_CodeUsageBulkTemplate_File")]
    partial class Add_CodeUsageBulkTemplate_File
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eInvoice.Models.Models.CodeTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CodeTemplates", "business");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72aa05d8-47fc-4558-b7f6-bcbafd0de450"),
                            File = new byte[] { 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 55, 49, 189, 145, 123, 1, 0, 0, 132, 5, 0, 0, 19, 0, 8, 2, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, 32, 162, 4, 2, 40, 160, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 84, 75, 111, 194, 48, 12, 190, 79, 218, 127, 168, 114, 157, 104, 96, 135, 105, 154, 40, 28, 246, 56, 110, 72, 176, 31, 16, 26, 183, 141, 104, 147, 40, 54, 12, 254, 253, 220, 240, 208, 52, 1, 21, 130, 75, 163, 38, 241, 247, 176, 29, 15, 199, 235, 166, 78, 86, 16, 208, 56, 155, 137, 65, 218, 23, 9, 216, 220, 105, 99, 203, 76, 124, 207, 62, 122, 207, 34, 65, 82, 86, 171, 218, 89, 200, 196, 6, 80, 140, 71, 247, 119, 195, 217, 198, 3, 38, 28, 109, 49, 19, 21, 145, 127, 145, 18, 243, 10, 26, 133, 169, 243, 96, 249, 164, 112, 161, 81, 196, 191, 161, 148, 94, 229, 11, 85, 130, 124, 236, 247, 159, 100, 238, 44, 129, 165, 30, 181, 24, 98, 52, 124, 131, 66, 45, 107, 74, 222, 215, 188, 189, 85, 50, 55, 86, 36, 175, 219, 123, 45, 85, 38, 148, 247, 181, 201, 21, 177, 80, 185, 178, 250, 31, 73, 207, 21, 133, 201, 65, 187, 124, 217, 48, 116, 138, 62, 128, 210, 88, 1, 80, 83, 167, 62, 24, 102, 12, 83, 32, 98, 99, 40, 228, 81, 206, 0, 53, 94, 70, 186, 115, 149, 114, 100, 20, 134, 149, 241, 248, 192, 214, 79, 48, 180, 39, 167, 93, 237, 226, 190, 184, 28, 193, 104, 72, 38, 42, 208, 167, 106, 216, 187, 92, 215, 242, 199, 133, 197, 220, 185, 69, 122, 30, 228, 210, 212, 196, 20, 165, 141, 50, 118, 175, 251, 12, 127, 188, 140, 50, 46, 131, 27, 11, 105, 253, 69, 224, 14, 29, 196, 61, 6, 50, 126, 175, 151, 16, 97, 58, 8, 145, 54, 53, 224, 173, 211, 30, 65, 187, 152, 43, 21, 64, 79, 137, 187, 183, 188, 185, 128, 191, 216, 93, 41, 87, 115, 206, 128, 164, 118, 185, 117, 217, 35, 232, 57, 126, 126, 210, 147, 224, 60, 242, 212, 8, 112, 121, 21, 246, 79, 180, 141, 238, 121, 6, 130, 64, 6, 14, 143, 244, 88, 179, 31, 24, 121, 228, 92, 93, 118, 104, 103, 154, 6, 125, 132, 91, 198, 25, 58, 250, 5, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 181, 85, 48, 35, 244, 0, 0, 0, 76, 2, 0, 0, 11, 0, 8, 2, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, 32, 162, 4, 2, 40, 160, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 146, 77, 79, 195, 48, 12, 134, 239, 72, 252, 135, 200, 247, 213, 221, 144, 16, 66, 75, 119, 65, 72, 187, 33, 84, 126, 128, 73, 220, 15, 181, 141, 163, 36, 27, 221, 191, 39, 28, 16, 84, 26, 131, 3, 71, 127, 189, 126, 252, 202, 219, 221, 60, 141, 234, 200, 33, 246, 226, 52, 172, 139, 18, 20, 59, 35, 182, 119, 173, 134, 151, 250, 113, 117, 7, 42, 38, 114, 150, 70, 113, 172, 225, 196, 17, 118, 213, 245, 213, 246, 153, 71, 74, 121, 40, 118, 189, 143, 42, 171, 184, 168, 161, 75, 201, 223, 35, 70, 211, 241, 68, 177, 16, 207, 46, 87, 26, 9, 19, 165, 28, 134, 22, 61, 153, 129, 90, 198, 77, 89, 222, 98, 248, 174, 1, 213, 66, 83, 237, 173, 134, 176, 183, 55, 160, 234, 147, 207, 155, 127, 215, 150, 166, 233, 13, 63, 136, 57, 76, 236, 210, 153, 21, 200, 115, 98, 103, 217, 174, 124, 200, 108, 33, 245, 249, 26, 85, 83, 104, 57, 105, 176, 98, 158, 114, 58, 34, 121, 95, 100, 108, 192, 243, 68, 155, 191, 19, 253, 124, 45, 78, 156, 200, 82, 34, 52, 18, 248, 50, 207, 71, 199, 37, 160, 245, 127, 90, 180, 52, 241, 203, 157, 121, 196, 55, 9, 195, 171, 200, 240, 201, 130, 139, 31, 168, 222, 1, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 129, 62, 148, 151, 243, 0, 0, 0, 186, 2, 0, 0, 26, 0, 8, 1, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, 32, 162, 4, 1, 40, 160, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 82, 77, 75, 196, 48, 16, 189, 11, 254, 135, 48, 119, 155, 118, 21, 17, 217, 116, 47, 34, 236, 85, 235, 15, 8, 201, 180, 41, 219, 38, 33, 51, 126, 244, 223, 27, 42, 186, 93, 88, 214, 75, 47, 3, 111, 134, 121, 239, 205, 199, 118, 247, 53, 14, 226, 3, 19, 245, 193, 43, 168, 138, 18, 4, 122, 19, 108, 239, 59, 5, 111, 205, 243, 205, 3, 8, 98, 237, 173, 30, 130, 71, 5, 19, 18, 236, 234, 235, 171, 237, 11, 14, 154, 115, 19, 185, 62, 146, 200, 44, 158, 20, 56, 230, 248, 40, 37, 25, 135, 163, 166, 34, 68, 244, 185, 210, 134, 52, 106, 206, 48, 117, 50, 106, 115, 208, 29, 202, 77, 89, 222, 203, 180, 228, 128, 250, 132, 83, 236, 173, 130, 180, 183, 183, 32, 154, 41, 102, 229, 255, 185, 67, 219, 246, 6, 159, 130, 121, 31, 209, 243, 25, 9, 73, 60, 13, 121, 0, 209, 232, 212, 33, 43, 248, 193, 69, 246, 8, 242, 188, 252, 102, 77, 121, 206, 107, 193, 163, 250, 12, 229, 28, 171, 75, 30, 170, 53, 61, 124, 134, 116, 32, 135, 200, 71, 31, 127, 41, 146, 115, 229, 162, 153, 187, 85, 239, 225, 116, 66, 251, 202, 41, 191, 219, 242, 44, 203, 244, 239, 102, 228, 201, 199, 213, 223, 0, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 157, 1, 194, 171, 90, 2, 0, 0, 219, 4, 0, 0, 15, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 172, 84, 203, 110, 219, 48, 16, 188, 23, 232, 63, 176, 236, 217, 209, 195, 178, 19, 11, 150, 130, 198, 86, 208, 0, 125, 4, 129, 155, 92, 124, 161, 169, 149, 69, 152, 34, 85, 146, 170, 109, 20, 253, 247, 174, 164, 168, 117, 154, 75, 138, 246, 34, 190, 103, 119, 102, 118, 53, 191, 60, 84, 146, 124, 3, 99, 133, 86, 9, 13, 206, 124, 74, 64, 113, 157, 11, 181, 77, 232, 151, 213, 245, 232, 130, 18, 235, 152, 202, 153, 212, 10, 18, 122, 4, 75, 47, 211, 215, 175, 230, 123, 109, 118, 27, 173, 119, 4, 1, 148, 77, 104, 233, 92, 29, 123, 158, 229, 37, 84, 204, 158, 233, 26, 20, 158, 20, 218, 84, 204, 225, 210, 108, 61, 91, 27, 96, 185, 45, 1, 92, 37, 189, 208, 247, 167, 94, 197, 132, 162, 61, 66, 108, 94, 130, 161, 139, 66, 112, 88, 106, 222, 84, 160, 92, 15, 98, 64, 50, 135, 233, 219, 82, 212, 118, 64, 171, 248, 75, 224, 42, 102, 118, 77, 61, 226, 186, 170, 17, 98, 35, 164, 112, 199, 14, 148, 146, 138, 199, 55, 91, 165, 13, 219, 72, 164, 125, 8, 38, 3, 50, 78, 159, 65, 87, 130, 27, 109, 117, 225, 206, 16, 202, 235, 147, 124, 198, 55, 240, 189, 32, 232, 41, 167, 243, 66, 72, 184, 239, 101, 39, 172, 174, 63, 177, 170, 141, 34, 41, 145, 204, 186, 44, 23, 14, 242, 132, 78, 113, 169, 247, 240, 100, 195, 52, 245, 85, 35, 36, 158, 6, 81, 20, 250, 212, 75, 127, 89, 113, 107, 72, 14, 5, 107, 164, 91, 161, 9, 3, 60, 94, 156, 70, 126, 16, 180, 55, 145, 212, 59, 233, 192, 40, 230, 96, 161, 149, 67, 13, 31, 213, 255, 87, 189, 58, 236, 69, 169, 209, 29, 114, 7, 95, 27, 97, 0, 139, 162, 149, 45, 157, 227, 151, 241, 152, 109, 236, 45, 115, 37, 105, 140, 76, 232, 50, 94, 63, 96, 1, 217, 154, 113, 88, 127, 252, 124, 189, 206, 53, 183, 107, 91, 135, 211, 245, 137, 206, 236, 185, 137, 127, 161, 52, 227, 45, 101, 15, 57, 247, 121, 245, 243, 63, 249, 167, 243, 182, 138, 239, 5, 236, 237, 111, 37, 219, 37, 57, 60, 8, 149, 235, 125, 66, 177, 39, 142, 39, 243, 125, 183, 253, 32, 114, 87, 38, 52, 28, 251, 17, 158, 247, 123, 239, 65, 108, 75, 151, 208, 89, 48, 11, 187, 216, 39, 208, 93, 221, 99, 136, 110, 36, 170, 243, 123, 201, 28, 203, 148, 51, 71, 236, 177, 182, 45, 110, 90, 87, 41, 49, 177, 192, 137, 185, 201, 59, 207, 188, 225, 37, 122, 43, 20, 228, 109, 169, 32, 206, 201, 234, 17, 109, 161, 115, 88, 29, 107, 108, 208, 244, 237, 93, 118, 253, 102, 238, 157, 220, 65, 242, 79, 223, 115, 38, 57, 22, 76, 59, 116, 97, 167, 225, 44, 24, 183, 73, 195, 193, 125, 176, 174, 27, 209, 43, 145, 208, 239, 65, 228, 191, 59, 247, 103, 209, 200, 207, 198, 147, 81, 116, 49, 11, 71, 23, 209, 56, 28, 45, 162, 101, 152, 77, 206, 179, 101, 118, 53, 249, 241, 127, 219, 3, 75, 38, 30, 254, 48, 109, 150, 37, 51, 110, 101, 24, 223, 225, 127, 233, 14, 138, 43, 102, 177, 93, 122, 121, 48, 95, 36, 55, 100, 237, 13, 175, 210, 159, 0, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 116, 223, 28, 115, 184, 0, 0, 0, 14, 1, 0, 0, 20, 0, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 92, 207, 65, 10, 194, 48, 16, 5, 208, 189, 224, 29, 194, 236, 53, 85, 80, 68, 146, 184, 40, 42, 174, 213, 3, 132, 118, 108, 3, 205, 164, 118, 166, 162, 183, 183, 34, 130, 116, 249, 223, 159, 89, 124, 179, 123, 198, 70, 61, 176, 227, 144, 200, 194, 98, 158, 129, 66, 42, 82, 25, 168, 178, 112, 189, 28, 102, 27, 80, 44, 158, 74, 223, 36, 66, 11, 47, 100, 216, 185, 233, 196, 48, 139, 26, 126, 137, 45, 212, 34, 237, 86, 107, 46, 106, 140, 158, 231, 169, 69, 26, 154, 91, 234, 162, 151, 33, 118, 149, 230, 182, 67, 95, 114, 141, 40, 177, 209, 203, 44, 91, 235, 232, 3, 129, 42, 82, 79, 98, 97, 5, 170, 167, 112, 239, 49, 255, 101, 103, 56, 56, 35, 46, 79, 37, 94, 94, 45, 26, 45, 206, 232, 143, 125, 125, 127, 60, 143, 233, 36, 24, 63, 231, 99, 207, 83, 140, 72, 50, 102, 65, 254, 51, 61, 236, 113, 111, 0, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 65, 191, 248, 96, 217, 0, 0, 0, 202, 1, 0, 0, 35, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 95, 114, 101, 108, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 46, 114, 101, 108, 115, 172, 145, 193, 78, 195, 48, 12, 64, 239, 72, 252, 67, 228, 59, 73, 187, 3, 66, 104, 233, 46, 8, 105, 87, 24, 31, 224, 165, 110, 27, 209, 58, 81, 108, 16, 251, 123, 130, 118, 161, 211, 36, 46, 156, 44, 219, 242, 243, 147, 189, 221, 125, 45, 179, 249, 164, 34, 49, 177, 135, 214, 54, 96, 136, 67, 234, 35, 143, 30, 222, 14, 207, 119, 15, 96, 68, 145, 123, 156, 19, 147, 135, 19, 9, 236, 186, 219, 155, 237, 11, 205, 168, 117, 72, 166, 152, 197, 84, 10, 139, 135, 73, 53, 63, 58, 39, 97, 162, 5, 197, 166, 76, 92, 59, 67, 42, 11, 106, 77, 203, 232, 50, 134, 119, 28, 201, 109, 154, 230, 222, 149, 223, 12, 232, 86, 76, 179, 239, 61, 148, 125, 191, 1, 115, 56, 229, 186, 249, 111, 118, 26, 134, 24, 232, 41, 133, 143, 133, 88, 175, 172, 112, 138, 199, 153, 42, 16, 203, 72, 234, 193, 218, 115, 69, 206, 161, 181, 85, 22, 220, 117, 143, 246, 63, 61, 114, 137, 172, 84, 94, 73, 181, 30, 90, 86, 70, 23, 61, 119, 145, 183, 246, 24, 249, 71, 210, 173, 62, 208, 125, 3, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 117, 62, 153, 105, 147, 6, 0, 0, 140, 26, 0, 0, 19, 0, 0, 0, 120, 108, 47, 116, 104, 101, 109, 101, 47, 116, 104, 101, 109, 101, 49, 46, 120, 109, 108, 236, 89, 91, 139, 219, 70, 20, 126, 47, 244, 63, 8, 189, 59, 190, 73, 178, 189, 196, 27, 108, 217, 78, 218, 236, 38, 33, 235, 164, 228, 113, 108, 143, 173, 201, 142, 52, 70, 51, 222, 141, 9, 129, 146, 60, 245, 165, 80, 72, 75, 95, 10, 125, 235, 67, 41, 13, 52, 208, 208, 151, 254, 152, 133, 132, 54, 253, 17, 61, 51, 146, 173, 153, 245, 56, 155, 203, 166, 180, 37, 107, 88, 164, 209, 119, 206, 124, 115, 206, 209, 55, 23, 93, 188, 116, 47, 166, 206, 17, 78, 57, 97, 73, 219, 173, 94, 168, 184, 14, 78, 198, 108, 66, 146, 89, 219, 189, 53, 28, 148, 154, 174, 195, 5, 74, 38, 136, 178, 4, 183, 221, 37, 230, 238, 165, 221, 143, 63, 186, 136, 118, 68, 132, 99, 236, 128, 125, 194, 119, 80, 219, 141, 132, 152, 239, 148, 203, 124, 12, 205, 136, 95, 96, 115, 156, 192, 179, 41, 75, 99, 36, 224, 54, 157, 149, 39, 41, 58, 6, 191, 49, 45, 215, 42, 149, 160, 28, 35, 146, 184, 78, 130, 98, 112, 123, 125, 58, 37, 99, 236, 12, 165, 75, 119, 119, 229, 188, 79, 225, 54, 17, 92, 54, 140, 105, 122, 32, 93, 99, 195, 66, 97, 39, 135, 85, 137, 224, 75, 30, 210, 212, 57, 66, 180, 237, 66, 63, 19, 118, 60, 196, 247, 132, 235, 80, 196, 5, 60, 104, 187, 21, 245, 231, 150, 119, 47, 150, 209, 78, 110, 68, 197, 22, 91, 205, 110, 160, 254, 114, 187, 220, 96, 114, 88, 83, 125, 166, 179, 209, 186, 83, 207, 243, 189, 160, 179, 246, 175, 0, 84, 108, 226, 250, 141, 126, 208, 15, 214, 254, 20, 0, 141, 199, 48, 210, 140, 139, 238, 211, 239, 182, 186, 61, 63, 199, 106, 160, 236, 210, 226, 187, 215, 232, 213, 171, 6, 94, 243, 95, 223, 224, 220, 241, 229, 207, 192, 43, 80, 230, 223, 219, 192, 15, 6, 33, 68, 209, 192, 43, 80, 134, 247, 45, 49, 105, 212, 66, 207, 192, 43, 80, 134, 15, 54, 240, 141, 74, 167, 231, 53, 12, 188, 2, 69, 148, 36, 135, 27, 232, 138, 31, 212, 195, 213, 104, 215, 144, 41, 163, 87, 172, 240, 150, 239, 13, 26, 181, 220, 121, 129, 130, 106, 88, 87, 151, 236, 98, 202, 18, 177, 173, 214, 98, 116, 151, 165, 3, 0, 72, 32, 69, 130, 36, 142, 88, 206, 241, 20, 141, 161, 138, 67, 68, 201, 40, 37, 206, 30, 153, 69, 80, 120, 115, 148, 48, 14, 205, 149, 90, 101, 80, 169, 195, 127, 249, 243, 212, 149, 138, 8, 218, 193, 72, 179, 150, 188, 128, 9, 223, 104, 146, 124, 28, 62, 78, 201, 92, 180, 221, 79, 193, 171, 171, 65, 158, 63, 123, 118, 242, 240, 233, 201, 195, 95, 79, 30, 61, 58, 121, 248, 115, 222, 183, 114, 101, 216, 93, 65, 201, 76, 183, 123, 249, 195, 87, 127, 125, 247, 185, 243, 231, 47, 223, 191, 124, 252, 117, 214, 245, 105, 60, 215, 241, 47, 126, 250, 226, 197, 111, 191, 191, 202, 61, 140, 184, 8, 197, 243, 111, 158, 188, 120, 250, 228, 249, 183, 95, 254, 241, 227, 99, 139, 247, 78, 138, 70, 58, 124, 72, 98, 204, 157, 107, 248, 216, 185, 201, 98, 24, 160, 133, 63, 30, 165, 111, 102, 49, 140, 16, 49, 44, 80, 4, 190, 45, 174, 251, 34, 50, 128, 215, 150, 136, 218, 112, 93, 108, 134, 240, 118, 10, 42, 99, 3, 94, 94, 220, 53, 184, 30, 68, 233, 66, 16, 75, 207, 87, 163, 216, 0, 238, 51, 70, 187, 44, 181, 6, 224, 170, 236, 75, 139, 240, 112, 145, 204, 236, 157, 167, 11, 29, 119, 19, 161, 35, 91, 223, 33, 74, 140, 4, 247, 23, 115, 144, 87, 98, 115, 25, 70, 216, 160, 121, 131, 162, 68, 160, 25, 78, 176, 112, 228, 51, 118, 136, 177, 101, 116, 119, 8, 49, 226, 186, 79, 198, 41, 227, 108, 42, 156, 59, 196, 233, 34, 98, 13, 201, 144, 140, 140, 66, 42, 140, 174, 144, 24, 242, 178, 180, 17, 132, 84, 27, 177, 217, 191, 237, 116, 25, 181, 141, 186, 135, 143, 76, 36, 188, 22, 136, 90, 200, 15, 49, 53, 194, 120, 25, 45, 4, 138, 109, 46, 135, 40, 166, 122, 192, 247, 144, 136, 108, 36, 15, 150, 233, 88, 199, 245, 185, 128, 76, 207, 48, 101, 78, 127, 130, 57, 183, 217, 92, 79, 97, 188, 90, 210, 175, 130, 194, 216, 211, 190, 79, 151, 177, 137, 76, 5, 57, 180, 249, 220, 67, 140, 233, 200, 30, 59, 12, 35, 20, 207, 173, 156, 73, 18, 233, 216, 79, 248, 33, 148, 40, 114, 110, 48, 97, 131, 239, 51, 243, 13, 145, 247, 144, 7, 148, 108, 77, 247, 109, 130, 141, 116, 159, 45, 4, 183, 64, 92, 117, 74, 69, 129, 200, 39, 139, 212, 146, 203, 203, 152, 153, 239, 227, 146, 78, 17, 86, 42, 3, 218, 111, 72, 122, 76, 146, 51, 245, 253, 148, 178, 251, 255, 140, 178, 219, 53, 250, 28, 52, 221, 238, 248, 93, 212, 188, 147, 18, 235, 59, 117, 229, 148, 134, 111, 195, 253, 7, 149, 187, 135, 22, 201, 13, 12, 47, 203, 230, 204, 245, 65, 184, 63, 8, 183, 251, 191, 23, 238, 109, 239, 242, 249, 203, 117, 161, 208, 32, 222, 197, 90, 93, 173, 220, 227, 173, 11, 247, 41, 161, 244, 64, 44, 41, 222, 227, 106, 237, 206, 97, 94, 154, 12, 160, 81, 109, 42, 212, 206, 114, 189, 145, 155, 71, 112, 153, 111, 19, 12, 220, 44, 69, 202, 198, 73, 153, 248, 140, 136, 232, 32, 66, 115, 88, 224, 87, 213, 54, 116, 198, 115, 215, 51, 238, 204, 25, 135, 117, 191, 106, 86, 27, 98, 124, 202, 183, 218, 61, 44, 226, 125, 54, 201, 246, 171, 213, 170, 220, 155, 102, 226, 193, 145, 40, 218, 43, 254, 186, 29, 246, 26, 34, 67, 7, 141, 98, 15, 182, 118, 175, 118, 181, 51, 181, 87, 94, 17, 144, 182, 111, 66, 66, 235, 204, 36, 81, 183, 144, 104, 172, 26, 33, 11, 175, 34, 161, 70, 118, 46, 44, 90, 22, 22, 77, 233, 126, 149, 170, 85, 22, 215, 161, 0, 106, 235, 172, 192, 194, 201, 129, 229, 86, 219, 245, 189, 236, 28, 0, 182, 84, 136, 226, 137, 204, 83, 118, 36, 176, 202, 174, 76, 206, 185, 102, 122, 91, 48, 169, 94, 1, 176, 138, 88, 85, 64, 145, 233, 150, 228, 186, 117, 120, 114, 116, 89, 169, 189, 70, 166, 13, 18, 90, 185, 153, 36, 180, 50, 140, 208, 4, 231, 213, 169, 31, 156, 156, 103, 174, 91, 69, 74, 13, 122, 50, 20, 171, 183, 161, 160, 209, 104, 190, 143, 92, 75, 17, 57, 165, 13, 52, 209, 149, 130, 38, 206, 113, 219, 13, 234, 62, 156, 141, 141, 209, 188, 237, 78, 97, 223, 15, 151, 241, 28, 106, 135, 203, 5, 47, 162, 51, 56, 60, 27, 139, 52, 123, 225, 223, 70, 89, 230, 41, 23, 61, 196, 163, 44, 224, 74, 116, 50, 53, 136, 137, 192, 169, 67, 73, 220, 118, 229, 240, 215, 213, 64, 19, 165, 33, 138, 91, 181, 6, 130, 240, 175, 37, 215, 2, 89, 249, 183, 145, 131, 164, 155, 73, 198, 211, 41, 30, 11, 61, 237, 90, 139, 140, 116, 118, 11, 10, 159, 105, 133, 245, 169, 50, 127, 123, 176, 180, 100, 11, 72, 247, 65, 52, 57, 118, 70, 116, 145, 222, 68, 80, 98, 126, 163, 42, 3, 56, 33, 28, 142, 127, 170, 89, 52, 39, 4, 206, 51, 215, 66, 86, 212, 223, 169, 137, 41, 151, 93, 253, 64, 81, 213, 80, 214, 142, 232, 60, 66, 249, 140, 162, 139, 121, 6, 87, 34, 186, 166, 163, 238, 214, 49, 208, 238, 242, 49, 67, 64, 55, 67, 56, 154, 201, 9, 246, 157, 103, 221, 179, 167, 106, 25, 57, 77, 52, 139, 57, 211, 80, 21, 57, 107, 218, 197, 244, 253, 77, 242, 26, 171, 98, 18, 53, 88, 101, 210, 173, 182, 13, 188, 208, 186, 214, 74, 235, 160, 80, 173, 179, 196, 25, 179, 238, 107, 76, 8, 26, 181, 162, 51, 131, 154, 100, 188, 41, 195, 82, 179, 243, 86, 147, 218, 57, 46, 8, 180, 72, 4, 91, 226, 182, 158, 35, 172, 145, 120, 219, 153, 31, 236, 78, 87, 173, 156, 32, 86, 235, 74, 85, 248, 234, 195, 135, 254, 109, 130, 141, 238, 130, 120, 244, 224, 20, 120, 65, 5, 87, 169, 132, 47, 15, 41, 130, 69, 95, 118, 142, 156, 201, 6, 188, 34, 247, 68, 190, 70, 132, 43, 103, 145, 146, 182, 123, 191, 226, 119, 188, 176, 230, 135, 165, 74, 211, 239, 151, 188, 186, 87, 41, 53, 253, 78, 189, 212, 241, 253, 122, 181, 239, 87, 43, 189, 110, 237, 1, 76, 44, 34, 138, 171, 126, 246, 209, 101, 0, 7, 81, 116, 153, 127, 122, 81, 237, 27, 159, 95, 226, 213, 89, 219, 133, 49, 139, 203, 76, 125, 94, 41, 43, 226, 234, 243, 75, 181, 182, 253, 243, 139, 67, 64, 116, 238, 7, 181, 65, 171, 222, 234, 6, 165, 86, 189, 51, 40, 121, 189, 110, 179, 212, 10, 131, 110, 169, 23, 132, 141, 222, 160, 23, 250, 205, 214, 224, 129, 235, 28, 41, 176, 215, 169, 135, 94, 208, 111, 150, 130, 106, 24, 150, 188, 160, 34, 233, 55, 91, 165, 134, 87, 171, 117, 188, 70, 167, 217, 247, 58, 15, 242, 101, 12, 140, 60, 147, 143, 60, 22, 16, 94, 197, 107, 247, 111, 0, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 155, 96, 229, 239, 214, 2, 0, 0, 164, 6, 0, 0, 13, 0, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, 164, 85, 223, 111, 155, 48, 16, 126, 159, 180, 255, 193, 242, 59, 53, 144, 144, 38, 17, 208, 45, 77, 145, 42, 117, 213, 164, 118, 210, 94, 29, 48, 137, 85, 255, 64, 198, 116, 100, 211, 254, 247, 157, 129, 36, 68, 157, 182, 174, 123, 137, 237, 227, 238, 243, 119, 223, 157, 47, 241, 85, 43, 5, 122, 102, 166, 230, 90, 37, 56, 184, 240, 49, 98, 42, 215, 5, 87, 219, 4, 127, 121, 204, 188, 57, 70, 181, 165, 170, 160, 66, 43, 150, 224, 61, 171, 241, 85, 250, 254, 93, 92, 219, 189, 96, 15, 59, 198, 44, 2, 8, 85, 39, 120, 103, 109, 181, 36, 164, 206, 119, 76, 210, 250, 66, 87, 76, 193, 151, 82, 27, 73, 45, 28, 205, 150, 212, 149, 97, 180, 168, 93, 144, 20, 36, 244, 253, 25, 145, 148, 43, 220, 35, 44, 101, 254, 26, 16, 73, 205, 83, 83, 121, 185, 150, 21, 181, 124, 195, 5, 183, 251, 14, 11, 35, 153, 47, 111, 183, 74, 27, 186, 17, 64, 181, 13, 166, 52, 71, 109, 48, 51, 225, 225, 134, 206, 244, 226, 18, 201, 115, 163, 107, 93, 218, 11, 0, 37, 186, 44, 121, 206, 94, 114, 93, 144, 5, 161, 249, 9, 9, 96, 223, 134, 20, 68, 196, 15, 251, 196, 211, 184, 212, 202, 214, 40, 215, 141, 178, 32, 63, 160, 59, 210, 203, 39, 165, 191, 169, 204, 125, 114, 198, 222, 43, 141, 235, 239, 232, 153, 10, 176, 4, 152, 164, 113, 174, 133, 54, 200, 130, 216, 144, 107, 103, 81, 84, 178, 222, 227, 154, 10, 190, 49, 220, 185, 149, 84, 114, 177, 239, 205, 97, 23, 183, 163, 166, 134, 170, 245, 80, 151, 115, 103, 235, 106, 54, 196, 74, 14, 10, 58, 35, 113, 220, 134, 165, 6, 32, 46, 196, 145, 105, 232, 72, 129, 33, 141, 161, 8, 150, 25, 149, 193, 1, 13, 251, 199, 125, 5, 148, 20, 244, 75, 15, 211, 249, 253, 197, 123, 107, 232, 62, 8, 163, 81, 0, 233, 46, 76, 227, 141, 54, 5, 244, 231, 73, 163, 131, 41, 141, 5, 43, 45, 16, 53, 124, 187, 115, 171, 213, 21, 252, 110, 180, 181, 80, 198, 52, 46, 56, 221, 106, 69, 133, 75, 165, 7, 57, 110, 32, 157, 156, 9, 241, 224, 122, 248, 107, 121, 134, 221, 150, 72, 53, 50, 147, 246, 182, 72, 48, 188, 6, 39, 194, 97, 11, 137, 12, 219, 30, 175, 63, 56, 252, 49, 90, 143, 61, 130, 117, 98, 253, 59, 44, 106, 203, 35, 254, 89, 244, 116, 241, 26, 86, 199, 112, 68, 171, 74, 236, 239, 27, 185, 97, 38, 235, 30, 227, 208, 46, 29, 105, 160, 57, 210, 226, 76, 137, 99, 78, 200, 53, 86, 130, 239, 93, 176, 128, 22, 29, 120, 161, 77, 195, 133, 229, 234, 55, 42, 0, 102, 209, 158, 235, 10, 231, 52, 238, 149, 29, 9, 60, 233, 20, 118, 19, 226, 90, 23, 112, 199, 135, 174, 1, 58, 95, 226, 16, 160, 168, 238, 49, 119, 133, 58, 146, 131, 152, 130, 149, 180, 17, 246, 241, 248, 49, 193, 167, 253, 39, 86, 240, 70, 194, 163, 31, 188, 62, 243, 103, 109, 59, 136, 4, 159, 246, 119, 174, 107, 130, 153, 187, 144, 181, 246, 174, 134, 86, 135, 21, 53, 134, 39, 248, 199, 205, 234, 114, 177, 190, 201, 66, 111, 238, 175, 230, 222, 116, 194, 34, 111, 17, 173, 214, 94, 52, 189, 94, 173, 215, 217, 194, 15, 253, 235, 159, 163, 169, 242, 31, 51, 165, 155, 128, 208, 32, 193, 116, 89, 11, 152, 60, 102, 72, 118, 32, 255, 112, 178, 37, 120, 116, 232, 233, 119, 114, 1, 237, 49, 247, 69, 56, 243, 63, 70, 129, 239, 101, 19, 63, 240, 166, 51, 58, 247, 230, 179, 73, 228, 101, 81, 16, 174, 103, 211, 213, 77, 148, 69, 35, 238, 209, 27, 167, 152, 79, 130, 224, 48, 197, 218, 32, 90, 90, 46, 153, 224, 234, 80, 171, 67, 133, 198, 86, 40, 18, 28, 255, 144, 4, 57, 84, 130, 156, 254, 94, 210, 95, 0, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 29, 237, 49, 238, 98, 2, 0, 0, 14, 5, 0, 0, 24, 0, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 140, 84, 203, 110, 219, 48, 16, 188, 23, 232, 63, 16, 188, 71, 148, 28, 197, 77, 4, 203, 65, 30, 8, 154, 67, 129, 160, 233, 227, 76, 83, 43, 139, 8, 169, 85, 73, 218, 78, 254, 190, 75, 202, 175, 38, 69, 144, 139, 68, 106, 119, 103, 135, 179, 67, 205, 46, 159, 173, 97, 107, 112, 94, 99, 95, 243, 34, 203, 57, 131, 94, 97, 163, 251, 101, 205, 127, 254, 184, 59, 57, 231, 204, 7, 217, 55, 210, 96, 15, 53, 127, 1, 207, 47, 231, 159, 63, 205, 54, 232, 158, 124, 7, 16, 24, 33, 244, 190, 230, 93, 8, 67, 37, 132, 87, 29, 88, 233, 51, 28, 160, 167, 72, 139, 206, 202, 64, 91, 183, 20, 126, 112, 32, 155, 84, 100, 141, 152, 228, 249, 84, 88, 169, 123, 62, 34, 84, 238, 35, 24, 216, 182, 90, 193, 45, 170, 149, 133, 62, 140, 32, 14, 140, 12, 196, 223, 119, 122, 240, 59, 52, 171, 62, 2, 103, 165, 123, 90, 13, 39, 10, 237, 64, 16, 11, 109, 116, 120, 73, 160, 156, 89, 85, 221, 47, 123, 116, 114, 97, 232, 220, 207, 69, 41, 213, 14, 59, 109, 222, 192, 91, 173, 28, 122, 108, 67, 70, 112, 98, 36, 250, 246, 204, 23, 226, 66, 16, 210, 124, 214, 104, 58, 65, 148, 157, 57, 104, 107, 126, 85, 84, 55, 19, 46, 230, 179, 164, 207, 47, 13, 27, 127, 180, 102, 65, 46, 30, 193, 128, 10, 208, 208, 152, 56, 139, 242, 47, 16, 159, 98, 226, 61, 125, 202, 9, 209, 167, 132, 136, 40, 85, 208, 107, 184, 1, 99, 106, 126, 61, 161, 9, 254, 73, 61, 104, 73, 13, 196, 190, 195, 241, 122, 215, 237, 46, 13, 236, 193, 177, 6, 90, 185, 50, 225, 59, 110, 190, 130, 94, 118, 129, 218, 150, 89, 73, 18, 68, 37, 170, 230, 229, 22, 188, 162, 17, 80, 235, 236, 52, 194, 42, 52, 132, 65, 79, 102, 117, 180, 18, 41, 40, 159, 71, 174, 186, 9, 93, 42, 159, 78, 203, 124, 58, 57, 227, 76, 173, 124, 64, 251, 123, 27, 216, 150, 143, 133, 68, 55, 21, 210, 123, 179, 141, 23, 89, 89, 22, 219, 202, 5, 248, 112, 167, 35, 155, 119, 81, 78, 183, 40, 244, 62, 160, 156, 157, 149, 211, 243, 47, 212, 254, 125, 16, 49, 30, 37, 201, 116, 43, 131, 156, 207, 28, 110, 24, 217, 147, 90, 250, 65, 70, 179, 23, 21, 1, 255, 87, 9, 146, 32, 166, 94, 81, 46, 145, 244, 52, 150, 245, 60, 159, 137, 53, 105, 173, 182, 177, 235, 227, 216, 228, 223, 216, 205, 113, 236, 116, 31, 19, 196, 96, 79, 35, 14, 244, 163, 52, 40, 119, 79, 163, 120, 69, 35, 226, 196, 67, 69, 138, 175, 98, 100, 197, 67, 93, 249, 138, 198, 104, 160, 81, 153, 65, 46, 225, 155, 116, 75, 221, 123, 102, 160, 77, 118, 248, 194, 153, 27, 29, 147, 103, 180, 14, 56, 68, 147, 36, 221, 49, 208, 216, 119, 187, 142, 254, 6, 64, 90, 69, 3, 177, 22, 49, 236, 54, 228, 166, 136, 251, 8, 97, 53, 48, 116, 154, 108, 150, 46, 120, 205, 7, 116, 193, 73, 29, 168, 67, 165, 201, 246, 238, 190, 41, 162, 123, 232, 122, 24, 120, 144, 46, 120, 166, 112, 21, 93, 25, 143, 181, 255, 122, 200, 30, 111, 192, 33, 157, 198, 178, 255, 147, 205, 255, 2, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 120, 51, 154, 185, 72, 1, 0, 0, 105, 2, 0, 0, 17, 0, 8, 1, 100, 111, 99, 80, 114, 111, 112, 115, 47, 99, 111, 114, 101, 46, 120, 109, 108, 32, 162, 4, 1, 40, 160, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 146, 81, 75, 195, 48, 20, 133, 223, 5, 255, 67, 201, 123, 155, 166, 117, 99, 132, 182, 3, 149, 61, 57, 16, 236, 152, 248, 22, 146, 187, 173, 216, 164, 33, 137, 118, 251, 247, 166, 237, 86, 171, 243, 193, 199, 228, 156, 251, 229, 156, 75, 178, 229, 81, 214, 193, 39, 24, 91, 53, 42, 71, 36, 138, 81, 0, 138, 55, 162, 82, 251, 28, 109, 202, 85, 184, 64, 129, 117, 76, 9, 86, 55, 10, 114, 116, 2, 139, 150, 197, 237, 77, 198, 53, 229, 141, 129, 103, 211, 104, 48, 174, 2, 27, 120, 146, 178, 148, 235, 28, 29, 156, 211, 20, 99, 203, 15, 32, 153, 141, 188, 67, 121, 113, 215, 24, 201, 156, 63, 154, 61, 214, 140, 191, 179, 61, 224, 36, 142, 231, 88, 130, 99, 130, 57, 134, 59, 96, 168, 71, 34, 58, 35, 5, 31, 145, 250, 195, 212, 61, 64, 112, 12, 53, 72, 80, 206, 98, 18, 17, 252, 237, 117, 96, 164, 253, 115, 160, 87, 38, 78, 89, 185, 147, 246, 157, 206, 113, 167, 108, 193, 7, 113, 116, 31, 109, 53, 26, 219, 182, 141, 218, 180, 143, 225, 243, 19, 252, 186, 126, 122, 233, 171, 134, 149, 234, 118, 197, 1, 21, 153, 224, 148, 27, 96, 174, 49, 197, 182, 82, 162, 105, 109, 176, 177, 96, 50, 60, 17, 186, 37, 214, 204, 186, 181, 223, 247, 174, 2, 113, 127, 250, 229, 189, 214, 61, 183, 175, 49, 192, 65, 4, 62, 24, 29, 106, 92, 148, 109, 250, 240, 88, 174, 80, 145, 196, 9, 9, 227, 52, 36, 164, 36, 119, 52, 89, 208, 116, 246, 214, 61, 255, 99, 190, 11, 58, 92, 200, 115, 136, 127, 16, 147, 69, 73, 102, 52, 157, 211, 89, 50, 33, 94, 0, 69, 134, 175, 62, 71, 241, 5, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 124, 15, 200, 51, 50, 1, 0, 0, 9, 2, 0, 0, 20, 0, 0, 0, 120, 108, 47, 116, 97, 98, 108, 101, 115, 47, 116, 97, 98, 108, 101, 49, 46, 120, 109, 108, 108, 145, 221, 78, 2, 49, 16, 133, 239, 77, 124, 135, 166, 247, 178, 11, 24, 99, 8, 93, 98, 48, 36, 36, 234, 133, 224, 3, 84, 58, 203, 54, 233, 207, 166, 51, 43, 236, 219, 59, 187, 43, 10, 193, 203, 158, 158, 51, 253, 206, 116, 190, 56, 122, 39, 190, 32, 161, 141, 65, 201, 241, 40, 151, 2, 194, 46, 26, 27, 246, 74, 126, 108, 87, 119, 143, 82, 32, 233, 96, 180, 139, 1, 148, 108, 1, 229, 162, 184, 189, 153, 147, 254, 116, 32, 56, 29, 80, 201, 138, 168, 158, 101, 25, 238, 42, 240, 26, 71, 177, 134, 192, 55, 101, 76, 94, 19, 31, 211, 62, 195, 58, 129, 54, 88, 1, 144, 119, 217, 36, 207, 31, 50, 175, 109, 144, 194, 26, 37, 39, 82, 4, 237, 121, 250, 182, 27, 202, 39, 99, 177, 118, 186, 125, 187, 16, 19, 148, 74, 62, 141, 103, 75, 54, 80, 36, 237, 240, 61, 30, 54, 85, 60, 48, 120, 46, 139, 185, 110, 40, 174, 172, 35, 72, 226, 204, 154, 21, 3, 234, 50, 186, 198, 7, 20, 187, 216, 4, 82, 114, 202, 129, 190, 194, 160, 247, 24, 227, 19, 198, 50, 26, 216, 182, 53, 200, 203, 112, 111, 154, 158, 76, 107, 2, 223, 25, 153, 86, 147, 126, 62, 150, 107, 110, 146, 255, 23, 185, 255, 155, 235, 61, 4, 234, 60, 217, 217, 227, 248, 131, 178, 161, 214, 193, 58, 148, 241, 124, 27, 189, 248, 10, 198, 54, 158, 123, 35, 215, 93, 217, 132, 52, 96, 119, 15, 246, 218, 139, 190, 146, 186, 229, 80, 178, 53, 240, 255, 112, 179, 46, 57, 132, 126, 213, 30, 118, 0, 41, 190, 1, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 207, 224, 71, 180, 194, 1, 0, 0, 44, 21, 0, 0, 39, 0, 0, 0, 120, 108, 47, 112, 114, 105, 110, 116, 101, 114, 83, 101, 116, 116, 105, 110, 103, 115, 47, 112, 114, 105, 110, 116, 101, 114, 83, 101, 116, 116, 105, 110, 103, 115, 49, 46, 98, 105, 110, 236, 84, 205, 74, 220, 80, 24, 61, 51, 177, 237, 232, 166, 14, 20, 220, 116, 81, 164, 43, 113, 232, 12, 147, 169, 221, 85, 153, 164, 118, 74, 210, 132, 36, 51, 184, 113, 49, 116, 82, 8, 140, 201, 144, 68, 68, 165, 130, 248, 26, 62, 72, 151, 46, 93, 246, 1, 186, 118, 33, 197, 7, 112, 163, 231, 166, 51, 216, 150, 161, 140, 224, 70, 248, 238, 229, 187, 223, 207, 61, 57, 55, 247, 144, 124, 54, 34, 124, 65, 138, 4, 25, 237, 43, 114, 188, 130, 203, 60, 66, 92, 196, 57, 171, 170, 98, 224, 3, 166, 141, 210, 156, 246, 244, 39, 220, 23, 218, 155, 18, 212, 188, 92, 72, 42, 3, 250, 231, 216, 42, 151, 233, 183, 202, 26, 87, 11, 33, 217, 114, 174, 233, 84, 150, 251, 21, 75, 99, 184, 242, 101, 154, 242, 55, 28, 155, 29, 95, 255, 147, 201, 232, 124, 238, 46, 227, 28, 175, 181, 213, 234, 251, 237, 195, 163, 255, 157, 242, 164, 216, 156, 47, 184, 30, 224, 21, 133, 226, 17, 42, 48, 249, 174, 102, 121, 245, 115, 130, 124, 59, 248, 164, 176, 139, 248, 142, 67, 212, 241, 14, 58, 255, 146, 58, 26, 92, 55, 80, 131, 137, 183, 104, 178, 86, 163, 25, 88, 227, 172, 17, 211, 100, 221, 100, 84, 103, 174, 51, 111, 208, 183, 153, 53, 209, 42, 178, 111, 100, 244, 76, 223, 176, 44, 116, 227, 40, 13, 51, 21, 185, 253, 81, 152, 250, 209, 65, 8, 203, 12, 2, 211, 131, 147, 70, 97, 156, 247, 243, 40, 137, 225, 58, 94, 224, 109, 116, 2, 120, 97, 150, 12, 119, 139, 26, 67, 103, 164, 162, 6, 218, 201, 48, 73, 237, 100, 16, 254, 142, 254, 190, 221, 106, 21, 232, 233, 134, 61, 185, 251, 233, 194, 104, 249, 37, 33, 191, 104, 26, 237, 186, 228, 84, 244, 139, 61, 251, 228, 234, 217, 199, 165, 179, 214, 241, 15, 214, 172, 241, 30, 42, 119, 92, 10, 171, 242, 149, 177, 87, 249, 58, 173, 167, 242, 69, 240, 254, 9, 251, 204, 46, 118, 216, 3, 84, 103, 233, 178, 223, 168, 110, 224, 162, 207, 40, 195, 30, 247, 83, 12, 8, 254, 23, 233, 112, 47, 158, 17, 219, 38, 199, 62, 70, 228, 247, 249, 132, 58, 79, 117, 178, 156, 53, 25, 162, 128, 40, 32, 10, 136, 2, 162, 128, 40, 32, 10, 136, 2, 162, 128, 40, 32, 10, 136, 2, 162, 128, 40, 32, 10, 204, 162, 192, 45, 0, 0, 0, 255, 255, 3, 0, 80, 75, 3, 4, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 93, 98, 134, 131, 145, 1, 0, 0, 26, 3, 0, 0, 16, 0, 8, 1, 100, 111, 99, 80, 114, 111, 112, 115, 47, 97, 112, 112, 46, 120, 109, 108, 32, 162, 4, 1, 40, 160, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 146, 77, 79, 227, 48, 16, 134, 239, 43, 237, 127, 136, 124, 167, 78, 217, 21, 90, 85, 142, 17, 42, 69, 28, 22, 81, 169, 129, 61, 123, 157, 73, 99, 225, 216, 150, 61, 68, 13, 191, 158, 73, 162, 150, 20, 246, 180, 183, 249, 120, 245, 250, 153, 241, 136, 235, 67, 107, 179, 14, 98, 50, 222, 21, 108, 185, 200, 89, 6, 78, 251, 202, 184, 125, 193, 158, 202, 187, 139, 95, 44, 75, 168, 92, 165, 172, 119, 80, 176, 30, 18, 187, 150, 223, 191, 137, 109, 244, 1, 34, 26, 72, 25, 89, 184, 84, 176, 6, 49, 172, 56, 79, 186, 129, 86, 165, 5, 181, 29, 117, 106, 31, 91, 133, 148, 198, 61, 247, 117, 109, 52, 220, 122, 253, 218, 130, 67, 126, 153, 231, 87, 28, 14, 8, 174, 130, 234, 34, 156, 12, 217, 228, 184, 234, 240, 127, 77, 43, 175, 7, 190, 244, 92, 246, 129, 128, 165, 184, 9, 193, 26, 173, 144, 166, 148, 15, 70, 71, 159, 124, 141, 217, 230, 160, 193, 10, 62, 111, 10, 162, 219, 129, 126, 141, 6, 123, 153, 11, 62, 79, 197, 78, 43, 11, 107, 50, 150, 181, 178, 9, 4, 255, 40, 136, 123, 80, 195, 210, 182, 202, 196, 36, 69, 135, 171, 14, 52, 250, 152, 37, 243, 70, 107, 187, 100, 217, 95, 149, 96, 192, 41, 88, 167, 162, 81, 14, 9, 107, 144, 77, 201, 24, 219, 144, 48, 202, 63, 62, 190, 164, 6, 0, 147, 224, 36, 152, 138, 99, 56, 215, 206, 99, 243, 83, 46, 71, 1, 5, 231, 194, 193, 96, 2, 161, 198, 57, 98, 105, 208, 66, 122, 172, 183, 42, 226, 63, 136, 151, 115, 226, 145, 97, 226, 157, 112, 110, 21, 170, 141, 195, 216, 127, 65, 28, 167, 166, 199, 62, 217, 175, 125, 27, 148, 235, 101, 185, 121, 184, 121, 220, 9, 126, 204, 197, 111, 227, 94, 210, 83, 40, 61, 89, 194, 113, 175, 231, 69, 177, 107, 84, 132, 138, 190, 226, 180, 247, 83, 65, 220, 211, 74, 163, 29, 76, 214, 141, 114, 123, 168, 142, 154, 175, 141, 225, 10, 158, 167, 83, 151, 203, 171, 69, 254, 35, 167, 15, 158, 213, 4, 255, 56, 106, 249, 14, 0, 0, 255, 255, 3, 0, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 55, 49, 189, 145, 123, 1, 0, 0, 132, 5, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 181, 85, 48, 35, 244, 0, 0, 0, 76, 2, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180, 3, 0, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 129, 62, 148, 151, 243, 0, 0, 0, 186, 2, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 217, 6, 0, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 157, 1, 194, 171, 90, 2, 0, 0, 219, 4, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 9, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 116, 223, 28, 115, 184, 0, 0, 0, 14, 1, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147, 11, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 65, 191, 248, 96, 217, 0, 0, 0, 202, 1, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 12, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 95, 114, 101, 108, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 46, 114, 101, 108, 115, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 117, 62, 153, 105, 147, 6, 0, 0, 140, 26, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 13, 0, 0, 120, 108, 47, 116, 104, 101, 109, 101, 47, 116, 104, 101, 109, 101, 49, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 155, 96, 229, 239, 214, 2, 0, 0, 164, 6, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 20, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 29, 237, 49, 238, 98, 2, 0, 0, 14, 5, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 23, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 120, 51, 154, 185, 72, 1, 0, 0, 105, 2, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 25, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 99, 111, 114, 101, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 124, 15, 200, 51, 50, 1, 0, 0, 9, 2, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 28, 0, 0, 120, 108, 47, 116, 97, 98, 108, 101, 115, 47, 116, 97, 98, 108, 101, 49, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 207, 224, 71, 180, 194, 1, 0, 0, 44, 21, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 29, 0, 0, 120, 108, 47, 112, 114, 105, 110, 116, 101, 114, 83, 101, 116, 116, 105, 110, 103, 115, 47, 112, 114, 105, 110, 116, 101, 114, 83, 101, 116, 116, 105, 110, 103, 115, 49, 46, 98, 105, 110, 80, 75, 1, 2, 45, 0, 20, 0, 6, 0, 8, 0, 0, 0, 33, 0, 93, 98, 134, 131, 145, 1, 0, 0, 26, 3, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 222, 31, 0, 0, 100, 111, 99, 80, 114, 111, 112, 115, 47, 97, 112, 112, 46, 120, 109, 108, 80, 75, 5, 6, 0, 0, 0, 0, 13, 0, 13, 0, 104, 3, 0, 0, 165, 34, 0, 0, 0, 0 },
                            FileName = "CodeUsageBulkTemplate.xlsx",
                            FileType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        });
                });

            modelBuilder.Entity("eInvoice.Models.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approach")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("approach");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("countryOfOrigin");

                    b.Property<string>("DateValidity")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dateValidity");

                    b.Property<string>("ExportPort")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("exportPort");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(10,5)")
                        .HasColumnName("grossWeight");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(10,5)")
                        .HasColumnName("netWeight");

                    b.Property<string>("Packaging")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("packaging");

                    b.Property<string>("Terms")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("terms");

                    b.HasKey("Id");

                    b.ToTable("Delivery", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Invoice", b =>
                {
                    b.Property<string>("InteranlId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("interanlId");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("date")
                        .HasColumnName("dateIssued");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("int")
                        .HasColumnName("deliveryId");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("documentType");

                    b.Property<string>("DocumentTypeversion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("documentTypeversion");

                    b.Property<decimal>("ExtraDiscountAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("extraDiscountAmount");

                    b.Property<int>("IssuerId")
                        .HasColumnType("int")
                        .HasColumnName("issuerId");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("netAmount");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("paymentId");

                    b.Property<string>("ProformaInvoiceNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("proformaInvoiceNumber");

                    b.Property<string>("PurchaseOrderDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("purchaseOrderDescription");

                    b.Property<string>("PurchaseOrderReference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("purchaseOrderReference");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiverId");

                    b.Property<string>("SalesOrderDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salesOrderDescription");

                    b.Property<string>("SalesOrderReference")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salesOrderReference");

                    b.Property<string>("TaxpayerActivityCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("taxpayerActivityCode");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("totalAmount");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("totalDiscountAmount");

                    b.Property<decimal>("TotalItemsDiscountAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("totalItemsDiscountAmount");

                    b.Property<decimal>("TotalSalesAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("totalSalesAmount");

                    b.HasKey("InteranlId")
                        .HasName("PK__Invoice__1B0114ED61A5BE0B");

                    b.HasIndex(new[] { "DeliveryId" }, "IX_Invoice_deliveryId");

                    b.HasIndex(new[] { "IssuerId" }, "IX_Invoice_issuerId");

                    b.HasIndex(new[] { "PaymentId" }, "IX_Invoice_paymentId");

                    b.HasIndex(new[] { "ReceiverId" }, "IX_Invoice_receiverId");

                    b.ToTable("Invoice", "taxes");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Issuer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("additionalInformation");

                    b.Property<string>("BranchId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("branchId");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("buildingNumber");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("country");

                    b.Property<string>("FlatNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("flatNumber");

                    b.Property<string>("Floor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("floor");

                    b.Property<string>("Governate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("governate");

                    b.Property<string>("Landmark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("landmark");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("postalCode");

                    b.Property<decimal?>("PriceThreshold")
                        .HasColumnType("decimal(10,5)")
                        .HasColumnName("priceThreshold");

                    b.Property<string>("RegionCity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("regionCity");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("registrationNumber");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("street");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Issuer", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccountIban")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bankAccountIBAN");

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bankAccountNo");

                    b.Property<string>("BankAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bankAddress");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bankName");

                    b.Property<string>("SwiftCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("swiftCode");

                    b.Property<string>("Terms")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("terms");

                    b.HasKey("Id");

                    b.ToTable("Payments", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Product", b =>
                {
                    b.Property<int>("Productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountEgp")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("amountEGP");

                    b.Property<decimal?>("AmountSold")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("amountSold");

                    b.Property<decimal?>("CurrencyExchangeRate")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("currencyExchangeRate");

                    b.Property<string>("CurrencySold")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("currencySold");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("discountAmount");

                    b.Property<decimal?>("DiscountRate")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("discountRate");

                    b.Property<string>("InternalCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("internalCode");

                    b.Property<string>("InvoiceInternalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("invoiceInternalId");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("itemCode");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("itemType");

                    b.Property<decimal>("ItemsDiscount")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("itemsDiscount");

                    b.Property<decimal>("NetTotal")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("netTotal");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("quantity");

                    b.Property<decimal>("SalesTotal")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("salesTotal");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("total");

                    b.Property<decimal>("TotalTaxableFees")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("totalTaxableFees");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("unitType");

                    b.Property<decimal>("ValueDifference")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("valueDifference");

                    b.HasKey("Productid");

                    b.HasIndex(new[] { "InvoiceInternalId" }, "IX_Products_invoiceInternalId");

                    b.ToTable("Products", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Receiver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalInformation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("additionalInformation");

                    b.Property<string>("BranchId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("branchId");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("buildingNumber");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("country");

                    b.Property<string>("FlatNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("flatNumber");

                    b.Property<string>("Floor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("floor");

                    b.Property<string>("Governate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("governate");

                    b.Property<string>("Landmark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("landmark");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("postalCode");

                    b.Property<string>("RegionCity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("regionCity");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("registrationNumber");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("street");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Receiver", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InvoiceInternalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("invoiceInternalId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvoiceInternalId" }, "IX_Signatures_invoiceInternalId");

                    b.ToTable("Signatures", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.SubmittedDoc", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("InvoiceInternalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("invoiceInternalId");

                    b.Property<string>("LongId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("longId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvoiceInternalId" }, "IX_SubmittedDocs_invoiceInternalId");

                    b.ToTable("SubmittedDocs", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.TaxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,5)")
                        .HasColumnName("amount");

                    b.Property<string>("InvoiceInternalId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("invoiceInternalId");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(20,5)")
                        .HasColumnName("rate");

                    b.Property<string>("SubType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subType");

                    b.Property<string>("TaxType1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("taxType");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InvoiceInternalId" }, "IX_TaxTypes_invoiceInternalId");

                    b.ToTable("TaxTypes", "taxes");
                });

            modelBuilder.Entity("eInvoice.Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Usersdetail", b =>
                {
                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("firstName");

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fullAddress");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fullName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("phone");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("street");

                    b.HasKey("Userid")
                        .HasName("PK__Usersdet__CBA1B25706F63767");

                    b.ToTable("Usersdetails", "business");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Invoice", b =>
                {
                    b.HasOne("eInvoice.Models.Models.Delivery", "Delivery")
                        .WithMany("Invoices")
                        .HasForeignKey("DeliveryId")
                        .HasConstraintName("FK__Invoice__deliver__32E0915F")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eInvoice.Models.Models.Issuer", "Issuer")
                        .WithMany("Invoices")
                        .HasForeignKey("IssuerId")
                        .HasConstraintName("FK__Invoice__issuerI__300424B4")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eInvoice.Models.Models.Payment", "Payment")
                        .WithMany("Invoices")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__Invoice__payment__31EC6D26")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eInvoice.Models.Models.Receiver", "Receiver")
                        .WithMany("Invoices")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Invoice__receive__30F848ED")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("Issuer");

                    b.Navigation("Payment");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Product", b =>
                {
                    b.HasOne("eInvoice.Models.Models.Invoice", "InvoiceInternal")
                        .WithMany("Products")
                        .HasForeignKey("InvoiceInternalId")
                        .HasConstraintName("FK__Products__invoic__38996AB5")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceInternal");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Signature", b =>
                {
                    b.HasOne("eInvoice.Models.Models.Invoice", "InvoiceInternal")
                        .WithMany("Signatures")
                        .HasForeignKey("InvoiceInternalId")
                        .HasConstraintName("FK__Signature__invoi__3B75D760")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceInternal");
                });

            modelBuilder.Entity("eInvoice.Models.Models.SubmittedDoc", b =>
                {
                    b.HasOne("eInvoice.Models.Models.Invoice", "InvoiceInternal")
                        .WithMany("SubmittedDocs")
                        .HasForeignKey("InvoiceInternalId")
                        .HasConstraintName("FK__Submitted__invoi__35BCFE0A")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceInternal");
                });

            modelBuilder.Entity("eInvoice.Models.Models.TaxType", b =>
                {
                    b.HasOne("eInvoice.Models.Models.Invoice", "InvoiceInternal")
                        .WithMany("TaxTypes")
                        .HasForeignKey("InvoiceInternalId")
                        .HasConstraintName("FK__TaxTypes__invoic__3E52440B")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceInternal");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Usersdetail", b =>
                {
                    b.HasOne("eInvoice.Models.Models.User", "User")
                        .WithOne("Usersdetail")
                        .HasForeignKey("eInvoice.Models.Models.Usersdetail", "Userid")
                        .HasConstraintName("FK__Usersdeta__fullA__4316F928")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Delivery", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Invoice", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Signatures");

                    b.Navigation("SubmittedDocs");

                    b.Navigation("TaxTypes");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Issuer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Payment", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("eInvoice.Models.Models.Receiver", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("eInvoice.Models.Models.User", b =>
                {
                    b.Navigation("Usersdetail");
                });
#pragma warning restore 612, 618
        }
    }
}
